// K-means clustering.
// Arguments:
// - r ... number of records
// - c ... number of centroids
// - f ... number of features
// - i ... number of iterations

Z = 2;
def km(i:si64) {
    // Data generation.
    X = [0.901783, 0.242832, 0.458003, 0.726276];
    X = reshape(X, 2, 2);
    C = [0.0681797, 0.245557, 0.668595, 0.204498];
    C = reshape(X, 2, 2);

    // K-means clustering (decisive part).
    for(i in 1:i) {
        D = (X @ t(C)) * -2.0 + t(sum(C ^ 2.0, 0));
        minD = aggMin(D, 0);
        P = D <= minD;
        P = P / sum(P, 0);
        P_denom = sum(P, 1);
        C = (t(P) @ X) / t(P_denom);
    }

    // Result output.
    return C;
}