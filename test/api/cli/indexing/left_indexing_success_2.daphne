// Left indexing using different scalar types to specify rows/cols.

// ****************************************************************************
// Input matrix
// ****************************************************************************

X = reshape(seq(0, 15, 1), 4, 4);
print("input");
print("X");
print(X); // to check if the input is as expected
print("");

// ****************************************************************************
// Single position
// ****************************************************************************

print("single position");

// Only rows.

print("Xr0_1[1, ]");
Xr0_1 = X;
Xr0_1[1, ] = reshape(seq(101, 104, 1), 1, 4);
print(Xr0_1);

print("Xr0_2[1.0, ]");
Xr0_2 = X;
Xr0_2[1.0, ] = reshape(seq(101, 104, 1), 1, 4);
print(Xr0_2);

print("Xr0_3[1.3, ]");
Xr0_3 = X;
Xr0_3[1.3, ] = reshape(seq(101, 104, 1), 1, 4);
print(Xr0_3);

print("Xr0_4[1.7, ]");
Xr0_4 = X;
Xr0_4[1.7, ] = reshape(seq(101, 104, 1), 1, 4);
print(Xr0_4);

// Only cols.

print("X0c_1[, 1]");
X0c_1 = X;
X0c_1[, 1] = seq(101, 104, 1);
print(X0c_1);

print("X0c_2[, 1.0]");
X0c_2 = X;
X0c_2[, 1.0] = seq(101, 104, 1);
print(X0c_2);

print("X0c_3[, 1.3]");
X0c_3 = X;
X0c_3[, 1.3] = seq(101, 104, 1);
print(X0c_3);

print("X0c_4[, 1.7]");
X0c_4 = X;
X0c_4[, 1.7] = seq(101, 104, 1);
print(X0c_4);

print("");

// ****************************************************************************
// Range of positions
// ****************************************************************************

print("range of positions");

// Only rows.

print("Xr0_5[1:3.7, ]");
Xr0_5 = X;
Xr0_5[1:3.7, ] = reshape(seq(101, 108, 1), 2, 4);
print(Xr0_5);

// Only cols.

print("X0c_5[, 1:3.7]");
X0c_5 = X;
X0c_5[, 1:3.7] = reshape(seq(101, 108, 1), 4, 2);
print(X0c_5);