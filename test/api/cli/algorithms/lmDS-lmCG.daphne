/*
 * Copyright 2023 The DAPHNE Consortium
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import "../../../../scripts/algorithms/lmDS_.daph";
import "../../../../scripts/algorithms/lmCG_.daph";

# Command-line arguments:
# r      ... the number of rows of the randomly generated feature matrix
# c      ... the number of columns of the randomly generated feature matrix
# icpt   ... the intercept value, must be in [0, 1, 2]
# write  ... whether to write the results to CSV files (for further comparison),
#            must be in [false, true]
# suffix ... suffix for output file names

# Generate some random data.
X = rand($r, $c, 0.0, 1.0, 1, 12345);
y = rand($r,  1, 0.0, 1.0, 1, 67890);

# Parameters for lmDS and/or lmCG.
reg = 0.0000001;
verbose = false;
tol = 0.0000001;
maxi = 0;

# Execute lmDS and lmCG.
b_DS = lmDS_.lmDS(X, y, $icpt, reg, verbose);
b_CG = lmCG_.lmCG(X, y, $icpt, reg, tol, maxi, verbose);

if($write) {
    # Write the results for external comparison.
    write(b_DS, "test/api/cli/algorithms/lmDS-lmCG__b_DS" + $suffix + ".csv");
    write(b_CG, "test/api/cli/algorithms/lmDS-lmCG__b_CG" + $suffix + ".csv");
}
else {
    # Calculate and print something, such that the algorithm invocations are not optimized away.
    print(sum(b_DS) + sum(b_CG));
}