#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------

# This function scales and center individual features in the input matrix (column wise.) using the input matrices.
#
# INPUT:
# ------------------------------------------------------------------------------------------
# X            Input feature matrix
# Centering    The column means to subtract from X (not done if empty)
# ScaleFactor  The column scaling to multiply with X (not done if empty)
# ------------------------------------------------------------------------------------------
#
# OUTPUT:
# ------------------------------------------------------------------------------------
# Y     Output feature matrix with K columns
# ------------------------------------------------------------------------------------

def m_scaleApply(X:matrix<f64>, Centering:matrix<f64>, ScaleFactor:matrix<f64>) -> matrix<f64> {
  Y = [0.0];
  if (as.si64(nrow(Centering)) > 0 && as.si64(ncol(Centering)) > 0) {
    Y = X - Centering;
  } else {
    Y = as.matrix<f64>(X);
  }
  
  
  if (as.si64(nrow(ScaleFactor)) > 0 && as.si64(ncol(ScaleFactor)) > 0) {
    Y = as.matrix<f64>(Y / ScaleFactor);
  }
  
  return as.matrix<f64>(Y);
}

