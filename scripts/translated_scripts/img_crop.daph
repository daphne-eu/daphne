def m_img_crop(img_in:matrix<f64>, w:si64, h:si64, x_offset:si64, y_offset:si64) -> matrix<f64> {
  orig_w = as.si64(ncol(img_in));
  orig_h = as.si64(nrow(img_in));
  start_h = (ceil((orig_h - h) / 2)) + y_offset;
  end_h = (start_h + h - 1);
  start_w = (ceil((orig_w - w) / 2)) + x_offset;
  end_w = (start_w + w - 1);
  img_out = [0.0];
  if ((start_h < 0) || (end_h > orig_h) || (start_w < 0) || (end_w > orig_w)) {
    print("Offset out of bounds! Returning input.");
    img_out = img_in;
  } else {
    mask = fill(as.f64(0), orig_h, orig_w);
    temp_mask = fill(as.f64(1), h, w);
    mask[start_h - 1:end_h, start_w - 1:end_w] = temp_mask;
    mask = reshape(mask, 1, orig_w * orig_h);
    img_out = reshape((reshape(img_in + 1, 1, orig_w * orig_h))[[, mask]] - 1, h, w);
  }
  
  return as.matrix<f64>(img_out);
}

