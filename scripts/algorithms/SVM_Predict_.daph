#-------------------------------------------------------------## Licensed to the Apache Software Foundation (ASF) under one# or more contributor license agreements.  See the NOTICE file# distributed with this work for additional information# regarding copyright ownership.  The ASF licenses this file# to you under the Apache License, Version 2.0 (the# "License"); you may not use this file except in compliance# with the License.  You may obtain a copy of the License at##   http://www.apache.org/licenses/LICENSE-2.0## Unless required by applicable law or agreed to in writing,# software distributed under the License is distributed on an# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS# OF ANY KIND, either express or implied.  See the License for the# specific language governing permissions and limitations# under the License.##-------------------------------------------------------------# This script has been manually translated from Apache SystemDS (https://github.com/apache/systemds).# Original file: scripts/builtin/msvmPredict.dml# This script helps in applying a trained MSVM model## INPUT:#------------------------------------------------------------------------------# X     Feature matrix X to classify# W     Matrix of trained variables (weights)#------------------------------------------------------------------------------## OUTPUT:#------------------------------------------------------------------------------# YRaw  Classification Labels Raw (unprocessed, might contain 1's and -1's)# Y     Classification Labels processed (final prediction: maxed to ones/zeros)#------------------------------------------------------------------------------m_msvmPredict = function(X:matrix<f64>, W:matrix<f64>)  return (YRaw:matrix<f64>, Y:matrix<f64>){    # Handle missing values (NaNs)    numNaNs = sum(isnan(X));    if (numNaNs > 0) {        print("msvmPredict: matrix X contains " + numNaNs + " missing values, replacing with 0.");        X = replace(X, Double.NaN, 0.0);    }    # Ensure compatibility between the feature matrix X and weight matrix W    if (ncol(X) != nrow(W)) {        if (ncol(X) + 1 != nrow(W)) {            stop("MSVM Predict: Invalid shape of W [" + nrow(W) + "," + ncol(W) + "] or X [" + nrow(X) + "," + ncol(X) + "]");        }        # Perform matrix multiplication and add bias term        YRaw = X %*% W[1:ncol(X),] + W[ncol(X)+1,];        Y = as.f64(idxMax(t(YRaw), 0));    }     else {        # Perform matrix multiplication without bias term        YRaw = X %*% W;        Y = as.f64(idxMax(t(YRaw), 0));    }}