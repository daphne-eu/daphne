[
    {
        "kernelTemplate": {
            "header": "AggAll.h",
            "opName": "aggAll",
            "returnType": "VTRes",
            "templateParams": [
                {
                    "name": "VTRes",
                    "isDataType": false
                },
                {
                    "name": "DTArg",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "AggOpCode",
                    "name": "opCode"
                },
                {
                    "type": "const DTArg *",
                    "name": "arg"
                }
            ]
        },
        "api": [
            {
                "name":  ["CUDA"],
                "instantiations": [
                    ["double",  ["DenseMatrix", "double"]],
                    ["float",   ["DenseMatrix", "float"]],
                    ["int64_t", ["DenseMatrix", "int64_t"]]
                ],
                "opCodes": ["SUM", "MIN", "MAX"]
            },
            {
                "name":  ["CPP"],
                "instantiations": [
                    ["float", ["DenseMatrix", "float"]],
                    ["double", ["DenseMatrix", "double"]],
                    ["int64_t", ["DenseMatrix", "int64_t"]],
                    ["double", ["DenseMatrix", "int64_t"]],
                    ["float", ["DenseMatrix", "int64_t"]],
                    ["double", ["CSRMatrix", "double"]],
                    ["float", ["CSRMatrix", "float"]],
                    ["int64_t", ["CSRMatrix", "int64_t"]],
                    ["double", ["CSRMatrix", "int64_t"]],
                    ["float", ["CSRMatrix", "int64_t"]]
                ],
                "opCodes": ["SUM", "MIN", "MAX", "MEAN", "STDDEV", "VAR"]
            }
        ]
    },
    {
        "kernelTemplate": {
            "header": "AggCol.h",
            "opName": "aggCol",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTArg",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "AggOpCode",
                    "name": "opCode"
                },
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const DTArg *",
                    "name": "arg"
                }
            ]
        },
        "api": [
            {
                "name":  ["CUDA"],
                "instantiations": [
                    [["DenseMatrix", "double"], ["DenseMatrix", "double"]],
                    [["DenseMatrix", "float"], ["DenseMatrix", "float"]],
                    [["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"]]
                ],
                "opCodes": ["SUM", "MIN", "MAX"]
            },
            {
                "name":  ["CPP"],
                "instantiations": [
                    [["DenseMatrix", "double"], ["DenseMatrix", "double"]],
                    [["DenseMatrix", "float"], ["DenseMatrix", "float"]],
                    [["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"]],
                    [["DenseMatrix", "double"], ["DenseMatrix", "int64_t"]],
                    [["DenseMatrix", "float"], ["DenseMatrix", "int64_t"]],
                    [["DenseMatrix", "size_t"], ["DenseMatrix", "double"]],
                    [["DenseMatrix", "size_t"], ["DenseMatrix", "float"]],
                    [["DenseMatrix", "size_t"], ["DenseMatrix", "int64_t"]],
                    [["DenseMatrix", "double"], ["CSRMatrix", "double"]],
                    [["DenseMatrix", "int64_t"], ["CSRMatrix", "int64_t"]],
                    [["DenseMatrix", "double"], ["CSRMatrix", "int64_t"]],
                    [["DenseMatrix", "float"], ["CSRMatrix", "int64_t"]]
                ],
                "opCodes": ["SUM", "MIN", "MAX", "MEAN", "STDDEV", "VAR", "IDXMIN", "IDXMAX"]
            }
        ]
    },
    {
        "kernelTemplate": {
            "header": "AggCum.h",
            "opName": "aggCum",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTArg",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "AggOpCode",
                    "name": "opCode"
                },
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const DTArg *",
                    "name": "arg"
                }
            ]
        },
        "instantiations": [
            [["DenseMatrix", "double"], ["DenseMatrix", "double"]],
            [["DenseMatrix", "float"], ["DenseMatrix", "float"]],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"]],
            [["DenseMatrix", "uint64_t"], ["DenseMatrix", "uint64_t"]]
        ],
        "opCodes": ["SUM", "PROD", "MIN", "MAX"]
    },
    {
        "kernelTemplate": {
            "header": "AggRow.h",
            "opName": "aggRow",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTArg",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "AggOpCode",
                    "name": "opCode"
                },
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const DTArg *",
                    "name": "arg"
                }
            ]
        },
        "api": [
            {
                "name":  ["CUDA"],
                "instantiations": [
                    [["DenseMatrix", "double"], ["DenseMatrix", "double"]],
                    [["DenseMatrix", "float"], ["DenseMatrix", "float"]],
                    [["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"]]
                ],
                "opCodes": ["SUM", "MIN", "MAX"]
            },
            {
                "name":  ["CPP"],
                "instantiations": [
                    [["DenseMatrix", "float"], ["DenseMatrix", "float"]],
                    [["DenseMatrix", "double"], ["DenseMatrix", "double"]],
                    [["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"]],
                    [["DenseMatrix", "float"], ["DenseMatrix", "int64_t"]],
                    [["DenseMatrix", "double"], ["DenseMatrix", "int64_t"]],
                    [["DenseMatrix", "uint8_t"], ["DenseMatrix", "uint8_t"]],
                    [["DenseMatrix", "size_t"], ["DenseMatrix", "float"]],
                    [["DenseMatrix", "size_t"], ["DenseMatrix", "double"]],
                    [["DenseMatrix", "size_t"], ["DenseMatrix", "int64_t"]],

                    [["DenseMatrix", "double"], ["CSRMatrix", "double"]],
                    [["DenseMatrix", "float"], ["CSRMatrix", "float"]],
                    [["DenseMatrix", "int64_t"], ["CSRMatrix", "int64_t"]],
                    [["DenseMatrix", "float"], ["CSRMatrix", "int64_t"]],
                    [["DenseMatrix", "double"], ["CSRMatrix", "int64_t"]]
                ],
                "opCodes": ["SUM", "MIN", "MAX", "MEAN", "STDDEV", "VAR", "IDXMIN", "IDXMAX"]
            }
        ]
    },
    {
        "kernelTemplate": {
            "header": "Cartesian.h",
            "opName": "cartesian",
            "returnType": "void",
            "templateParams": [],
            "runtimeParams": [
                {
                    "type": "Frame *&",
                    "name": "res"
                },
                {
                    "type": "const Frame *",
                    "name": "lhs"
                },
                {
                    "type": "const Frame *",
                    "name": "rhs"
                }
            ]
        },
        "instantiations": [
            []
        ]
    },
    {
        "kernelTemplate": {
            "header": "CastObj.h",
            "opName": "castObj",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTArg",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const DTArg *",
                    "name": "arg"
                }
            ]
        },
        "instantiations": [
            [["DenseMatrix", "double"], "Frame"],
            [["DenseMatrix", "int64_t"], "Frame"],
            [["DenseMatrix", "uint64_t"], "Frame"],
            ["Frame", ["DenseMatrix", "double"]],
            ["Frame", ["DenseMatrix", "int64_t"]],
            ["Frame", ["DenseMatrix", "uint64_t"]],
            
            [["DenseMatrix", "double"], ["DenseMatrix", "double"]],
            [["DenseMatrix", "double"], ["DenseMatrix", "float"]],
            [["DenseMatrix", "double"], ["DenseMatrix", "int64_t"]],
            [["DenseMatrix", "double"], ["DenseMatrix", "int32_t"]],
            [["DenseMatrix", "double"], ["DenseMatrix", "int8_t"]],
            [["DenseMatrix", "double"], ["DenseMatrix", "uint64_t"]],
            [["DenseMatrix", "double"], ["DenseMatrix", "uint32_t"]],
            [["DenseMatrix", "double"], ["DenseMatrix", "uint8_t"]],
            [["DenseMatrix", "double"], ["DenseMatrix", "size_t"]],

            [["DenseMatrix", "float"], ["DenseMatrix", "double"]],
            [["DenseMatrix", "float"], ["DenseMatrix", "float"]],
            [["DenseMatrix", "float"], ["DenseMatrix", "int64_t"]],
            [["DenseMatrix", "float"], ["DenseMatrix", "int32_t"]],
            [["DenseMatrix", "float"], ["DenseMatrix", "int8_t"]],
            [["DenseMatrix", "float"], ["DenseMatrix", "uint64_t"]],
            [["DenseMatrix", "float"], ["DenseMatrix", "uint32_t"]],
            [["DenseMatrix", "float"], ["DenseMatrix", "uint8_t"]],
            [["DenseMatrix", "float"], ["DenseMatrix", "size_t"]],

            [["DenseMatrix", "int64_t"], ["DenseMatrix", "double"]],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "float"]],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"]],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "int32_t"]],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "int8_t"]],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "uint64_t"]],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "uint32_t"]],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "uint8_t"]],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "size_t"]],

            [["DenseMatrix", "int32_t"], ["DenseMatrix", "double"]],
            [["DenseMatrix", "int32_t"], ["DenseMatrix", "float"]],
            [["DenseMatrix", "int32_t"], ["DenseMatrix", "int64_t"]],
            [["DenseMatrix", "int32_t"], ["DenseMatrix", "int32_t"]],
            [["DenseMatrix", "int32_t"], ["DenseMatrix", "int8_t"]],
            [["DenseMatrix", "int32_t"], ["DenseMatrix", "uint64_t"]],
            [["DenseMatrix", "int32_t"], ["DenseMatrix", "uint32_t"]],
            [["DenseMatrix", "int32_t"], ["DenseMatrix", "uint8_t"]],
            [["DenseMatrix", "int32_t"], ["DenseMatrix", "size_t"]],

            [["DenseMatrix", "int8_t"], ["DenseMatrix", "double"]],
            [["DenseMatrix", "int8_t"], ["DenseMatrix", "float"]],
            [["DenseMatrix", "int8_t"], ["DenseMatrix", "int64_t"]],
            [["DenseMatrix", "int8_t"], ["DenseMatrix", "int32_t"]],
            [["DenseMatrix", "int8_t"], ["DenseMatrix", "int8_t"]],
            [["DenseMatrix", "int8_t"], ["DenseMatrix", "uint64_t"]],
            [["DenseMatrix", "int8_t"], ["DenseMatrix", "uint32_t"]],
            [["DenseMatrix", "int8_t"], ["DenseMatrix", "uint8_t"]],
            [["DenseMatrix", "int8_t"], ["DenseMatrix", "size_t"]],

            [["DenseMatrix", "uint64_t"], ["DenseMatrix", "double"]],
            [["DenseMatrix", "uint64_t"], ["DenseMatrix", "float"]],
            [["DenseMatrix", "uint64_t"], ["DenseMatrix", "int64_t"]],
            [["DenseMatrix", "uint64_t"], ["DenseMatrix", "int32_t"]],
            [["DenseMatrix", "uint64_t"], ["DenseMatrix", "int8_t"]],
            [["DenseMatrix", "uint64_t"], ["DenseMatrix", "uint64_t"]],
            [["DenseMatrix", "uint64_t"], ["DenseMatrix", "uint32_t"]],
            [["DenseMatrix", "uint64_t"], ["DenseMatrix", "uint8_t"]],
            [["DenseMatrix", "uint64_t"], ["DenseMatrix", "size_t"]],

            [["DenseMatrix", "uint32_t"], ["DenseMatrix", "double"]],
            [["DenseMatrix", "uint32_t"], ["DenseMatrix", "float"]],
            [["DenseMatrix", "uint32_t"], ["DenseMatrix", "int64_t"]],
            [["DenseMatrix", "uint32_t"], ["DenseMatrix", "int32_t"]],
            [["DenseMatrix", "uint32_t"], ["DenseMatrix", "int8_t"]],
            [["DenseMatrix", "uint32_t"], ["DenseMatrix", "uint64_t"]],
            [["DenseMatrix", "uint32_t"], ["DenseMatrix", "uint32_t"]],
            [["DenseMatrix", "uint32_t"], ["DenseMatrix", "uint8_t"]],
            [["DenseMatrix", "uint32_t"], ["DenseMatrix", "size_t"]],

            [["DenseMatrix", "uint8_t"], ["DenseMatrix", "double"]],
            [["DenseMatrix", "uint8_t"], ["DenseMatrix", "float"]],
            [["DenseMatrix", "uint8_t"], ["DenseMatrix", "int64_t"]],
            [["DenseMatrix", "uint8_t"], ["DenseMatrix", "int32_t"]],
            [["DenseMatrix", "uint8_t"], ["DenseMatrix", "int8_t"]],
            [["DenseMatrix", "uint8_t"], ["DenseMatrix", "uint64_t"]],
            [["DenseMatrix", "uint8_t"], ["DenseMatrix", "uint32_t"]],
            [["DenseMatrix", "uint8_t"], ["DenseMatrix", "uint8_t"]],
            [["DenseMatrix", "uint8_t"], ["DenseMatrix", "size_t"]],

            [["DenseMatrix", "size_t"], ["DenseMatrix", "double"]],
            [["DenseMatrix", "size_t"], ["DenseMatrix", "float"]],
            [["DenseMatrix", "size_t"], ["DenseMatrix", "int64_t"]],
            [["DenseMatrix", "size_t"], ["DenseMatrix", "int32_t"]],
            [["DenseMatrix", "size_t"], ["DenseMatrix", "int8_t"]],
            [["DenseMatrix", "size_t"], ["DenseMatrix", "uint64_t"]],
            [["DenseMatrix", "size_t"], ["DenseMatrix", "uint32_t"]],
            [["DenseMatrix", "size_t"], ["DenseMatrix", "uint8_t"]],
            [["DenseMatrix", "size_t"], ["DenseMatrix", "size_t"]],
            
            [["DenseMatrix","double"],["CSRMatrix","double"]],
            [["DenseMatrix","float"],["CSRMatrix","float"]],
            [["DenseMatrix","int64_t"],["CSRMatrix","int64_t"]],
            [["CSRMatrix","double"], ["DenseMatrix","double"]],
            [["CSRMatrix","float"], ["DenseMatrix","float"]],
            [["CSRMatrix","int64_t"], ["DenseMatrix","int64_t"]],
            [["CSRMatrix","double"], ["CSRMatrix","float"]],
            [["CSRMatrix","float"], ["CSRMatrix","double"]]
        ]
    },
    {
        "kernelTemplate": {
            "header": "CastObjSca.h",
            "opName": "castObjSca",
            "returnType": "VTRes",
            "templateParams": [
                {
                    "name": "VTRes",
                    "isDataType": false
                },
                {
                    "name": "DTArg",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "const DTArg *",
                    "name": "arg"
                }
            ]
        },
        "instantiations": [
            ["double", ["DenseMatrix", "double"]],
            ["double", ["DenseMatrix", "float"]],
            ["double", ["DenseMatrix", "int64_t"]],
            ["double", ["DenseMatrix", "int32_t"]],
            ["double", ["DenseMatrix", "int8_t"]],
            ["double", ["DenseMatrix", "uint64_t"]],
            ["double", ["DenseMatrix", "uint32_t"]],
            ["double", ["DenseMatrix", "uint8_t"]],
            ["double", ["DenseMatrix", "size_t"]],

            ["int64_t", ["DenseMatrix", "double"]],
            ["int64_t", ["DenseMatrix", "float"]],
            ["int64_t", ["DenseMatrix", "int64_t"]],
            ["int64_t", ["DenseMatrix", "int32_t"]],
            ["int64_t", ["DenseMatrix", "int8_t"]],
            ["int64_t", ["DenseMatrix", "uint64_t"]],
            ["int64_t", ["DenseMatrix", "uint32_t"]],
            ["int64_t", ["DenseMatrix", "uint8_t"]],
            ["int64_t", ["DenseMatrix", "size_t"]],

            ["size_t", ["DenseMatrix", "size_t"]],

            ["double", "Frame"],
            ["int64_t", "Frame"]
        ]
    },
    {
        "kernelTemplate": {
            "header": "EigenCal.h",
            "opName": "eigenCal",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes1",
                    "isDataType": true
                },
                {
                    "name": "DTRes2",
                    "isDataType": true
                },
                {
                    "name": "DTArg",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes1 *&",
                    "name": "res1"
                },
                {
                    "type": "DTRes2 *&",
                    "name": "res2"
                },
                {
                    "type": "const DTArg *",
                    "name": "inMat"
                }
            ]
        },
        "api": [
            {
                "name":  ["CPP"],
                "instantiations": [
                    [["DenseMatrix", "double"], ["DenseMatrix", "double"],["DenseMatrix", "double"]],
                    [["DenseMatrix", "float"], ["DenseMatrix", "float"],["DenseMatrix", "float"]]
                ]
            }
        ]
    },
    {
        "kernelTemplate": {
            "header": "CastSca.h",
            "opName": "castSca",
            "returnType": "VTRes",
            "templateParams": [
                {
                    "name": "VTRes",
                    "isDataType": false
                },
                {
                    "name": "VTArg",
                    "isDataType": false
                }
            ],
            "runtimeParams": [
                {
                    "type": "VTArg",
                    "name": "arg"
                }
            ]
        },
        "instantiations": [
            ["double", "double"],
            ["double", "float"],
            ["double", "int64_t"],
            ["double", "int32_t"],
            ["double", "int8_t"],
            ["double", "uint64_t"],
            ["double", "uint32_t"],
            ["double", "uint8_t"],
            ["double", "size_t"],
            ["double", "bool"],
            ["float", "double"],
            ["float", "float"],
            ["float", "int64_t"],
            ["float", "int32_t"],
            ["float", "int8_t"],
            ["float", "uint64_t"],
            ["float", "uint32_t"],
            ["float", "uint8_t"],
            ["float", "size_t"],
            ["float", "bool"],
            ["int64_t", "double"],
            ["int64_t", "float"],
            ["int64_t", "int64_t"],
            ["int64_t", "int32_t"],
            ["int64_t", "int8_t"],
            ["int64_t", "uint64_t"],
            ["int64_t", "uint32_t"],
            ["int64_t", "uint8_t"],
            ["int64_t", "size_t"],
            ["int64_t", "bool"],
            ["int32_t", "double"],
            ["int32_t", "float"],
            ["int32_t", "int64_t"],
            ["int32_t", "int32_t"],
            ["int32_t", "int8_t"],
            ["int32_t", "uint64_t"],
            ["int32_t", "uint32_t"],
            ["int32_t", "uint8_t"],
            ["int32_t", "size_t"],
            ["int32_t", "bool"],
            ["int8_t", "double"],
            ["int8_t", "float"],
            ["int8_t", "int64_t"],
            ["int8_t", "int32_t"],
            ["int8_t", "int8_t"],
            ["int8_t", "uint64_t"],
            ["int8_t", "uint32_t"],
            ["int8_t", "uint8_t"],
            ["int8_t", "size_t"],
            ["int8_t", "bool"],
            ["uint64_t", "double"],
            ["uint64_t", "float"],
            ["uint64_t", "int64_t"],
            ["uint64_t", "int32_t"],
            ["uint64_t", "int8_t"],
            ["uint64_t", "uint64_t"],
            ["uint64_t", "uint32_t"],
            ["uint64_t", "uint8_t"],
            ["uint64_t", "size_t"],
            ["uint64_t", "bool"],
            ["uint32_t", "double"],
            ["uint32_t", "float"],
            ["uint32_t", "int64_t"],
            ["uint32_t", "int32_t"],
            ["uint32_t", "int8_t"],
            ["uint32_t", "uint64_t"],
            ["uint32_t", "uint32_t"],
            ["uint32_t", "uint8_t"],
            ["uint32_t", "size_t"],
            ["uint32_t", "bool"],
            ["uint8_t", "double"],
            ["uint8_t", "float"],
            ["uint8_t", "int64_t"],
            ["uint8_t", "int32_t"],
            ["uint8_t", "int8_t"],
            ["uint8_t", "uint64_t"],
            ["uint8_t", "uint32_t"],
            ["uint8_t", "uint8_t"],
            ["uint8_t", "size_t"],
            ["uint8_t", "bool"],
            ["size_t", "double"],
            ["size_t", "float"],
            ["size_t", "int64_t"],
            ["size_t", "int32_t"],
            ["size_t", "int8_t"],
            ["size_t", "uint64_t"],
            ["size_t", "uint32_t"],
            ["size_t", "uint8_t"],
            ["size_t", "size_t"],
            ["size_t", "bool"],
            ["bool", "double"],
            ["bool", "float"],
            ["bool", "int64_t"],
            ["bool", "int32_t"],
            ["bool", "int8_t"],
            ["bool", "uint64_t"],
            ["bool", "uint32_t"],
            ["bool", "uint8_t"],
            ["bool", "size_t"],
            ["bool", "bool"],
            ["const char *", "double"],
            ["const char *", "float"],
            ["const char *", "int64_t"],
            ["const char *", "int32_t"],
            ["const char *", "int8_t"],
            ["const char *", "uint64_t"],
            ["const char *", "uint32_t"],
            ["const char *", "uint8_t"],
            ["const char *", "size_t"],
            ["const char *", "bool"]
        ]
    },
    {
        "kernelTemplate": {
            "header": "CastScaObj.h",
            "opName": "castScaObj",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "VTArg",
                    "isDataType": false
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "VTArg",
                    "name": "arg"
                }
            ]
        },
        "instantiations": [
            [["DenseMatrix", "double"], "double"],
            [["DenseMatrix", "float"], "double"],
            [["DenseMatrix", "int64_t"], "double"],
            [["DenseMatrix", "int32_t"], "double"],
            [["DenseMatrix", "int8_t"], "double"],
            [["DenseMatrix", "uint64_t"], "double"],
            [["DenseMatrix", "uint32_t"], "double"],
            [["DenseMatrix", "uint8_t"], "double"], 

            [["DenseMatrix", "double"], "int64_t"],
            [["DenseMatrix", "float"], "int64_t"],
            [["DenseMatrix", "int64_t"], "int64_t"],
            [["DenseMatrix", "int32_t"], "int64_t"],
            [["DenseMatrix", "int8_t"], "int64_t"],
            [["DenseMatrix", "uint64_t"], "int64_t"],
            [["DenseMatrix", "uint32_t"], "int64_t"],
            [["DenseMatrix", "uint8_t"], "int64_t"], 

            ["Frame", "double"],
            ["Frame", "int64_t"]
        ]
    },
    {
        "kernelTemplate": {
            "header": "ColBind.h",
            "opName": "colBind",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTLhs",
                    "isDataType": true
                },
                {
                    "name": "DTRhs",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const DTLhs *",
                    "name": "lhs"
                },
                {
                    "type": "const DTRhs *",
                    "name": "rhs"
                }
            ]
        },
        "api": [
            {
                "name":  ["CUDA", "CPP"],
                "instantiations": [
                    [["DenseMatrix", "double"], ["DenseMatrix", "double"], ["DenseMatrix", "double"]],
                    [["DenseMatrix", "float"], ["DenseMatrix", "float"], ["DenseMatrix", "float"]],
                    [["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"]]
                ]
            },
            {
                "name" : ["CPP"],
                "instantiations": [
                    ["Frame", "Frame", "Frame"],
                    [["CSRMatrix", "double"], ["CSRMatrix", "double"], ["CSRMatrix", "double"]],
                    [["CSRMatrix", "int64_t"], ["CSRMatrix", "int64_t"], ["CSRMatrix", "int64_t"]]
                ]
            }
        ]
    },
    {
        "kernelTemplate": {
            "header": "StringEq.h",
            "opName": "stringEq",
            "returnType": "void",
            "templateParams": [],
            "runtimeParams": [
                {
                    "type": "bool *",
                    "name": "res"
                },
                {
                    "type": "const char *",
                    "name": "lhs"
                },
                {
                    "type": "const char *",
                    "name": "rhs"
                }
            ]
        },
        "instantiations": [
            []
        ]
    },
    {
        "kernelTemplate": {
            "header": "Concat.h",
            "opName": "concat",
            "returnType": "void",
            "templateParams": [],
            "runtimeParams": [
                {
                    "type": "char *&",
                    "name": "res"
                },
                {
                    "type": "const char *",
                    "name": "lhs"
                },
                {
                    "type": "const char *",
                    "name": "rhs"
                }
            ]
        },
        "instantiations": [
            []
        ]
    },
    {
        "kernelTemplate": {
            "header": "CreateDaphneContext.h",
            "opName": "createDaphneContext",
            "returnType": "void",
            "templateParams": [],
            "runtimeParams": [
                {
                    "type": "DaphneContext *&",
                    "name": "res"
                },
                {
                    "type": "uint64_t",
                    "name": "configPtr"
                }
            ]
        },
        "instantiations": [
            []
        ]
    },
    {
        "kernelTemplate": {
            "header": "CreateCUDAContext.h",
            "opName": "createCUDAContext",
            "returnType": "void",
            "templateParams": [],
            "runtimeParams": []
        },
        "api": [
            {
                "name":  ["CUDA"],
                "instantiations": [[]]

            }]
    },
    {
        "kernelTemplate": {
            "header": "CreateFPGAContext.h",
            "opName": "createFPGAContext",
            "returnType": "void",
            "templateParams": [],
            "runtimeParams": []
        },
        "api": [
            {
                "name":  ["FPGAOPENCL"],
                "instantiations": [[]]

            }]
    },
    {
        "kernelTemplate": {
            "header": "CreateDistributedContext.h",
            "opName": "createDistributedContext",
            "returnType": "void",
            "templateParams": [],
            "runtimeParams": []
        },
        "instantiations": [
            []
        ]
    },
    {
        "kernelTemplate": {
            "header": "ConvertMemRefToDenseMatrix.h",
            "opName": "convertMemRefToDenseMatrix",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "VT",
                    "isDataType": false
                }
            ],
            "runtimeParams": [
                {
                    "type": "DenseMatrix<VT> *&",
                    "name": "result"
                },
                {
                    "type": "size_t",
                    "name": "basePtr"
                },
                {
                    "type": "size_t",
                    "name": "offset"
                },
                {
                    "type": "size_t",
                    "name": "size0"
                },
                {
                    "type": "size_t",
                    "name": "size1"
                },
                {
                    "type": "size_t",
                    "name": "stride0"
                },
                {
                    "type": "size_t",
                    "name": "stride1"
                }
            ]
        },
        "instantiations": [
            ["int64_t"],
            ["uint64_t"],
            ["float"],
            ["double"]
        ]
    },
    {
        "kernelTemplate": {
            "header": "ConvertDenseMatrixToMemRef.h",
            "opName": "convertDenseMatrixToMemRef",
            "returnType": "StridedMemRefType<VT,2>",
            "templateParams": [
                {
                    "name": "VT",
                    "isDataType": false
                }
            ],
            "runtimeParams": [
                {
                    "type": "DenseMatrix<VT> *",
                    "name": "input"
                }
            ]
        },
        "instantiations": [
            ["int64_t"],
            ["uint64_t"],
            ["float"],
            ["double"]
        ]
    },
    {
        "kernelTemplate": {
            "header": "CreateFrame.h",
            "opName": "createFrame",
            "returnType": "void",
            "templateParams": [],
            "runtimeParams": [
                {
                    "type": "Frame *&",
                    "name": "res"
                },
                {
                    "type": "Structure **",
                    "name": "colMats"
                },
                {
                    "type": "size_t",
                    "name": "numColMats"
                },
                {
                    "type": "const char **",
                    "name": "labels"
                },
                {
                    "type": "size_t",
                    "name": "numLabels"
                }
            ]
        },
        "instantiations": [
            []
        ]
    },
    {
        "kernelTemplate": {
            "header": "CTable.h",
            "opName": "ctable",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTLhs",
                    "isDataType": true
                },
                {
                    "name": "DTRhs",
                    "isDataType": true
                },
                {
                    "name": "VTWeight",
                    "isDataType": false
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const DTLhs *",
                    "name": "lhs"
                },
                {
                    "type": "const DTRhs *",
                    "name": "rhs"
                },
                {
                    "type": "VTWeight",
                    "name": "weight"
                },
                {
                    "type": "int64_t",
                    "name": "resNumRows"
                },
                {
                    "type": "int64_t",
                    "name": "resNumCols"
                }
            ]
        },
        "instantiations": [
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"], "int64_t"],
            [["DenseMatrix", "double"], ["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"], "double"],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "int32_t"], ["DenseMatrix", "int32_t"], "int64_t"],
            [["DenseMatrix", "double"], ["DenseMatrix", "int32_t"], ["DenseMatrix", "int32_t"], "double"],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "double"], ["DenseMatrix", "double"], "int64_t"],
            [["DenseMatrix", "double"], ["DenseMatrix", "double"], ["DenseMatrix", "double"], "double"],

            [["CSRMatrix", "int64_t"], ["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"], "int64_t"],
            [["CSRMatrix", "double"], ["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"], "double"],
            [["CSRMatrix", "int64_t"], ["DenseMatrix", "int32_t"], ["DenseMatrix", "int32_t"], "int64_t"],
            [["CSRMatrix", "double"], ["DenseMatrix", "int32_t"], ["DenseMatrix", "int32_t"], "double"],
            [["CSRMatrix", "int64_t"], ["DenseMatrix", "double"], ["DenseMatrix", "double"], "int64_t"],
            [["CSRMatrix", "double"], ["DenseMatrix", "double"], ["DenseMatrix", "double"], "double"]
        ]
    },
    {
        "kernelTemplate": {
            "header": "DestroyDaphneContext.h",
            "opName": "destroyDaphneContext",
            "returnType": "void",
            "templateParams": [],
            "runtimeParams": []
        },
        "instantiations": [
            []
        ]
    },
    {
        "kernelTemplate": {
            "header": "DiagMatrix.h",
            "opName": "diagMatrix",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTArg",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const DTArg *",
                    "name": "arg"
                }
            ]
        },
        "instantiations": [
            [["DenseMatrix", "double"], ["DenseMatrix", "double"]],
            [["DenseMatrix", "float"], ["DenseMatrix", "float"]],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"]],
            [["DenseMatrix", "int32_t"], ["DenseMatrix", "int32_t"]],
            [["CSRMatrix", "double"], ["DenseMatrix", "double"]],
            [["CSRMatrix", "float"], ["DenseMatrix", "float"]],
            [["CSRMatrix", "int64_t"], ["DenseMatrix", "int64_t"]],
            [["CSRMatrix", "int32_t"], ["DenseMatrix", "int32_t"]],
            [["CSRMatrix", "double"], ["CSRMatrix", "double"]],
            [["CSRMatrix", "float"], ["CSRMatrix", "float"]],
            [["CSRMatrix", "int64_t"], ["CSRMatrix", "int64_t"]],
            [["CSRMatrix", "int32_t"], ["CSRMatrix", "int32_t"]]
        ]
    },
    {
        "kernelTemplate": {
            "header": "DiagVector.h",
            "opName": "diagVector",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTArg",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const DTArg *",
                    "name": "arg"
                }
            ]
        },
        "instantiations": [
            [["DenseMatrix", "double"], ["DenseMatrix", "double"]],
            [["DenseMatrix", "float"], ["DenseMatrix", "float"]],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"]],
            [["DenseMatrix", "int32_t"], ["DenseMatrix", "int32_t"]],
            [["DenseMatrix", "double"], ["CSRMatrix", "double"]],
            [["DenseMatrix", "float"], ["CSRMatrix", "float"]],
            [["DenseMatrix", "int64_t"], ["CSRMatrix", "int64_t"]],
            [["DenseMatrix", "int32_t"], ["CSRMatrix", "int32_t"]]
        ]
    },
    {
        "kernelTemplate": {
            "header": "EwBinaryMat.h",
            "opName": "ewBinaryMat",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTLhs",
                    "isDataType": true
                },
                {
                    "name": "DTRhs",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "BinaryOpCode",
                    "name": "opCode"
                },
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const DTLhs *",
                    "name": "lhs"
                },
                {
                    "type": "const DTRhs *",
                    "name": "rhs"
                }
            ]
        },
        "api": [
            {
                "name":  ["CUDA", "CPP"],
                "instantiations": [
                    [["DenseMatrix", "float"], ["DenseMatrix", "float"], ["DenseMatrix", "float"]],
                    [["DenseMatrix", "double"], ["DenseMatrix", "double"], ["DenseMatrix", "double"]],
                    [["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"]]
                ],
                "opCodes": ["ADD", "SUB", "MUL", "DIV", "POW", "LOG", "MOD", "EQ", "NEQ", "LT", "LE", "GT", "GE", "MIN", "MAX", "AND", "OR"]
            },
            {
                "name":  ["example_for_commented_or_unimplemented"],
                "instantiations": [
                    [["DenseMatrix", "uint32_t"], ["DenseMatrix", "uint32_t"], ["DenseMatrix", "uint32_t"]]
                ],
                "opCodes": ["BIT_AND", "BIT_OR"]
            },
            {
                "name":  ["CPP"],
                "instantiations": [
                    [["DenseMatrix", "uint64_t"], ["DenseMatrix", "uint64_t"], ["DenseMatrix", "uint64_t"]],
                    [["DenseMatrix", "size_t"], ["DenseMatrix", "size_t"], ["DenseMatrix", "size_t"]],
                    [["CSRMatrix", "double"], ["CSRMatrix", "double"], ["DenseMatrix", "double"]],
                    [["CSRMatrix", "double"], ["CSRMatrix", "double"], ["CSRMatrix", "double"]],
                    [["CSRMatrix", "float"], ["CSRMatrix", "float"], ["DenseMatrix", "float"]],
                    [["CSRMatrix", "float"], ["CSRMatrix", "float"], ["CSRMatrix", "float"]]

                ],
                "opCodes": ["ADD", "SUB", "MUL", "DIV", "POW", "LOG", "MOD", "EQ", "NEQ", "LT", "LE", "GT", "GE", "MIN", "MAX", "AND", "OR"]
            }
        ]
    },
    {
        "kernelTemplate": {
            "header": "EwBinaryObjSca.h",
            "opName": "ewBinaryObjSca",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTLhs",
                    "isDataType": true
                },
                {
                    "name": "VTRhs",
                    "isDataType": false
                }
            ],
            "runtimeParams": [
                {
                    "type": "BinaryOpCode",
                    "name": "opCode"
                },
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const DTLhs *",
                    "name": "lhs"
                },
                {
                    "type": "VTRhs",
                    "name": "rhs"
                }
            ]
        },
        "api": [
            {
                "name":  ["CUDA", "CPP"],
                "instantiations": [
                    [["DenseMatrix", "float"], ["DenseMatrix", "float"], "float"],
                    [["DenseMatrix", "double"], ["DenseMatrix", "double"], "double"],
                    [["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"], "int64_t"]
                ],
                "opCodes": ["ADD", "SUB", "MUL", "DIV", "POW", "LOG", "MOD", "EQ", "NEQ", "LT", "LE", "GT", "GE", "MIN", "MAX", "AND", "OR", "BITWISE_AND"]
            },
            {
                "name":  ["CPP"],
                "instantiations": [
                    [["DenseMatrix", "uint64_t"], ["DenseMatrix", "uint64_t"], "uint64_t"],
                    [["DenseMatrix", "size_t"], ["DenseMatrix", "size_t"], "size_t"],
                    ["Frame", "Frame", "float"],
                    ["Frame", "Frame", "double"],
                    ["Frame", "Frame", "int64_t"]
                ],
                "opCodes": ["ADD", "SUB", "MUL", "DIV", "POW", "LOG", "MOD", "EQ", "NEQ", "LT", "LE", "GT", "GE", "MIN", "MAX", "AND", "OR", "BITWISE_AND"]
            }
        ]
    },
    {
        "kernelTemplate": {
            "header": "EwBinarySca.h",
            "opName": "ewBinarySca",
            "returnType": "TRes",
            "templateParams": [
                {
                    "name": "TRes",
                    "isDataType": false
                },
                {
                    "name": "TLhs",
                    "isDataType": false
                },
                {
                    "name": "TRhs",
                    "isDataType": false
                }
            ],
            "runtimeParams": [
                {
                    "type": "BinaryOpCode",
                    "name": "opCode"
                },
                {
                    "type": "TLhs",
                    "name": "lhs"
                },
                {
                    "type": "TRhs",
                    "name": "rhs"
                }
            ]
        },
        "instantiations": [
            ["double", "double", "double"],
            ["float", "float", "float"],
            ["int64_t", "int64_t", "int64_t"],
            ["uint64_t", "uint64_t", "uint64_t"],
            ["uint32_t", "uint32_t", "uint32_t"],
            ["size_t", "size_t", "size_t"]
        ],
        "opCodes": ["ADD", "SUB", "MUL", "DIV", "POW", "LOG", "MOD", "EQ", "NEQ", "LT", "LE", "GT", "GE", "MIN", "MAX", "AND", "OR", "BITWISE_AND"]
    },
    {
        "kernelTemplate": {
            "header": "OuterBinary.h",
            "opName": "outerBinary",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTLhs",
                    "isDataType": true
                },
                {
                    "name": "DTRhs",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "BinaryOpCode",
                    "name": "opCode"
                },
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const DTLhs *",
                    "name": "lhs"
                },
                {
                    "type": "const DTRhs *",
                    "name": "rhs"
                }
            ]
        },
        "instantiations": [
            [["DenseMatrix", "double"], ["DenseMatrix", "double"], ["DenseMatrix", "double"]],
            [["DenseMatrix", "float"], ["DenseMatrix", "float"], ["DenseMatrix", "float"]],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"]],
            [["DenseMatrix", "uint64_t"], ["DenseMatrix", "uint64_t"], ["DenseMatrix", "uint64_t"]]
        ],
        "opCodes": [
            "ADD", "SUB", "MUL", "DIV", "POW", "MOD", "LOG",
            "MIN", "MAX",
            "AND", "OR",
            "EQ", "NEQ", "LT", "LE", "GT", "GE"
        ]
    },
    {
        "kernelTemplate": {
            "header": "CondMatMatMat.h",
            "opName": "condMatMatMat",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTCond",
                    "isDataType": true
                },
                {
                    "name": "DTThen",
                    "isDataType": true
                },
                {
                    "name": "DTElse",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const DTCond *",
                    "name": "cond"
                },
                {
                    "type": "const DTThen *",
                    "name": "thenVal"
                },
                {
                    "type": "const DTElse *",
                    "name": "elseVal"
                }
            ]
        },
        "instantiations": [
            [["DenseMatrix", "double"], ["DenseMatrix", "int64_t"], ["DenseMatrix", "double"], ["DenseMatrix", "double"]],
            [["DenseMatrix", "double"], ["DenseMatrix", "double"], ["DenseMatrix", "double"], ["DenseMatrix", "double"]],
            [["DenseMatrix", "double"], ["DenseMatrix", "bool"], ["DenseMatrix", "double"], ["DenseMatrix", "double"]],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"]],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "double"], ["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"]],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "bool"], ["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"]]
        ]
    },
    {
        "kernelTemplate": {
            "header": "CondMatMatSca.h",
            "opName": "condMatMatSca",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTCond",
                    "isDataType": true
                },
                {
                    "name": "DTThen",
                    "isDataType": true
                },
                {
                    "name": "VTElse",
                    "isDataType": false
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const DTCond *",
                    "name": "cond"
                },
                {
                    "type": "const DTThen *",
                    "name": "thenVal"
                },
                {
                    "type": "VTElse",
                    "name": "elseVal"
                }
            ]
        },
        "instantiations": [
            [["DenseMatrix", "double"], ["DenseMatrix", "int64_t"], ["DenseMatrix", "double"], "double"],
            [["DenseMatrix", "double"], ["DenseMatrix", "double"], ["DenseMatrix", "double"], "double"],
            [["DenseMatrix", "double"], ["DenseMatrix", "bool"], ["DenseMatrix", "double"], "double"],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"], "int64_t"],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "double"], ["DenseMatrix", "int64_t"], "int64_t"],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "bool"], ["DenseMatrix", "int64_t"], "int64_t"]
        ]
    },
    {
        "kernelTemplate": {
            "header": "CondMatScaMat.h",
            "opName": "condMatScaMat",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTCond",
                    "isDataType": true
                },
                {
                    "name": "VTThen",
                    "isDataType": false
                },
                {
                    "name": "DTElse",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const DTCond *",
                    "name": "cond"
                },
                {
                    "type": "VTThen",
                    "name": "thenVal"
                },
                {
                    "type": "const DTElse *",
                    "name": "elseVal"
                }
            ]
        },
        "instantiations": [
            [["DenseMatrix", "double"], ["DenseMatrix", "int64_t"], "double", ["DenseMatrix", "double"]],
            [["DenseMatrix", "double"], ["DenseMatrix", "double"], "double", ["DenseMatrix", "double"]],
            [["DenseMatrix", "double"], ["DenseMatrix", "bool"], "double", ["DenseMatrix", "double"]],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"], "int64_t", ["DenseMatrix", "int64_t"]],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "double"], "int64_t", ["DenseMatrix", "int64_t"]],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "bool"], "int64_t", ["DenseMatrix", "int64_t"]]
        ]
    },
    {
        "kernelTemplate": {
            "header": "CondMatScaSca.h",
            "opName": "condMatScaSca",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTCond",
                    "isDataType": true
                },
                {
                    "name": "VTThen",
                    "isDataType": false
                },
                {
                    "name": "VTElse",
                    "isDataType": false
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const DTCond *",
                    "name": "cond"
                },
                {
                    "type": "VTThen",
                    "name": "thenVal"
                },
                {
                    "type": "VTElse",
                    "name": "elseVal"
                }
            ]
        },
        "instantiations": [
            [["DenseMatrix", "double"], ["DenseMatrix", "int64_t"], "double", "double"],
            [["DenseMatrix", "double"], ["DenseMatrix", "double"], "double", "double"],
            [["DenseMatrix", "double"], ["DenseMatrix", "bool"], "double", "double"],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"], "int64_t", "int64_t"],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "double"], "int64_t", "int64_t"],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "bool"], "int64_t", "int64_t"]
        ]
    },
    {
        "kernelTemplate": {
            "header": "ExtractCol.h",
            "opName": "extractCol",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTArg",
                    "isDataType": true
                },
                {
                    "name": "DTSel",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const DTArg *",
                    "name": "arg"
                },
                {
                    "type": "const DTSel *",
                    "name": "sel"
                }
            ]
        },
        "api": [
            {
                "name":  ["CUDA", "CPP"],
                "instantiations": [
                    [["DenseMatrix", "float"], ["DenseMatrix", "float"], ["DenseMatrix", "int64_t"]],
                    [["DenseMatrix", "double"], ["DenseMatrix", "double"], ["DenseMatrix", "int64_t"]],
                    [["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"]]]
            },
            {
                "name":  ["CPP"],
                "instantiations": [
                    ["Frame", "Frame", "char"],
                    ["Frame", "Frame", ["DenseMatrix", "int64_t"]],
                    ["Frame", "Frame", ["DenseMatrix", "size_t"]]]
            }
        ]
    },
    {
        "kernelTemplate": {
            "header": "Fill.h",
            "opName": "fill",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "VTArg",
                    "isDataType": false
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "VTArg",
                    "name": "arg"
                },
                {
                    "type": "size_t",
                    "name": "numRows"
                },
                {
                    "type": "size_t",
                    "name": "numCols"
                }
            ]
        },
        "api": [
            {
                "name":  ["CUDA", "CPP"],
                "instantiations": [
                    [["DenseMatrix", "float"], "float"],
                    [["DenseMatrix", "double"], "double"],
                    [["DenseMatrix", "int64_t"], "int64_t"],
                    [["DenseMatrix", "uint64_t"], "uint64_t"],
                    [["DenseMatrix", "uint8_t"], "uint8_t"]]
            }
        ]
    },
    {
        "kernelTemplate": {
            "header": "MatrixConstant.h",
            "opName": "matrixConstant",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "uint64_t",
                    "name": "matrixAddr"
                }
            ]
        },

        "instantiations": [
            [["DenseMatrix", "float"]],
            [["DenseMatrix", "double"]],
            [["DenseMatrix", "int64_t"]],
            [["DenseMatrix", "uint64_t"]],
            [["DenseMatrix", "uint8_t"]],
            [["DenseMatrix", "bool"]]
        ]
    },
    {
        "kernelTemplate": {
            "header": "ExtractRow.h",
            "opName": "extractRow",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTArg",
                    "isDataType": true
                },
                {
                    "name": "VTSel",
                    "isDataType": false
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const DTArg *",
                    "name": "arg"
                },
                {
                    "type": "const DenseMatrix<VTSel> *",
                    "name": "sel"
                }
            ]
        },
        "instantiations": [
            [["DenseMatrix", "double"], ["DenseMatrix", "double"], "int64_t"],
            [["DenseMatrix", "double"], ["DenseMatrix", "double"], "size_t"],
            [["DenseMatrix", "float"], ["DenseMatrix", "float"], "int64_t"],
            [["DenseMatrix", "float"], ["DenseMatrix", "float"], "size_t"],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"], "int64_t"],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"], "size_t"],
            ["Frame", "Frame", "int64_t"],
            ["Frame", "Frame", "size_t"]
        ]
    },
    {
        "kernelTemplate": {
            "header": "FilterCol.h",
            "opName": "filterCol",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTArg",
                    "isDataType": true
                },
                {
                    "name": "VTSel",
                    "isDataType": false
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const DTArg *",
                    "name": "arg"
                },
                {
                    "type": "const DenseMatrix<VTSel> *",
                    "name": "sel"
                }
            ]
        },
        "instantiations": [
            [["DenseMatrix", "double"], ["DenseMatrix", "double"], "double"],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"], "double"],
            [["DenseMatrix", "double"], ["DenseMatrix", "double"], "int64_t"],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"], "int64_t"],
            [["DenseMatrix", "double"], ["DenseMatrix", "double"], "uint64_t"],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"], "uint64_t"]
        ]
    },
    {
        "kernelTemplate": {
            "header": "FilterRow.h",
            "opName": "filterRow",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTArg",
                    "isDataType": true
                },
                {
                    "name": "VTSel",
                    "isDataType": false
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const DTArg *",
                    "name": "arg"
                },
                {
                    "type": "const DenseMatrix<VTSel> *",
                    "name": "sel"
                }
            ]
        },
        "instantiations": [
            [["DenseMatrix", "double"], ["DenseMatrix", "double"], "double"],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"], "double"],
            [["DenseMatrix", "double"], ["DenseMatrix", "double"], "int64_t"],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"], "int64_t"],
            [["DenseMatrix", "double"], ["DenseMatrix", "double"], "uint64_t"],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"], "uint64_t"],
            ["Frame", "Frame", "double"],
            ["Frame", "Frame", "int64_t"]
        ]
    },
    {
        "kernelTemplate": {
            "header": "GroupJoin.h",
            "opName": "groupJoin",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "VTLhsTid",
                    "isDataType": false
                }
            ],
            "runtimeParams": [
                {
                    "type": "Frame *&",
                    "name": "res"
                },
                {
                    "type": "DenseMatrix<VTLhsTid> *&",
                    "name": "lhsTid"
                },
                {
                    "type": "const Frame *",
                    "name": "lhs"
                },
                {
                    "type": "const Frame *",
                    "name": "rhs"
                },
                {
                    "type": "const char *",
                    "name": "lhsOn"
                },
                {
                    "type": "const char *",
                    "name": "rhsOn"
                },
                {
                    "type": "const char *",
                    "name": "rhsAgg"
                }
            ]
        },
        "instantiations": [
            ["int64_t"],
            ["size_t"]
        ]
    },
    {
    	"kernelTemplate": {
    		"header": "InnerJoin.h",
    		"opName": "innerJoin",
    		"returnType": "void",
    		"templateParams": [],
    		"runtimeParams": [
    			{
    				"type": "Frame *&",
    				"name": "res"
    			},
    			{
    				"type": "const Frame *",
    				"name": "lhs"
    			},
    			{
    				"type": "const Frame *",
    				"name": "rhs"
    			},
    			{
    				"type": "const char *",
    				"name": "lhsOn"
    			},
    			{
    				"type": "const char *",
    				"name": "rhsOn"
    			}
    		]
    	},
    	"instantiations": [
    		[]
    	]
    },
    {
    	"kernelTemplate": {
    		"header": "ThetaJoin.h",
    		"opName": "thetaJoin",
    		"returnType": "void",
    		"templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTLhs",
                    "isDataType": true
                },
                {
                    "name": "DTRhs",
                    "isDataType": true
                }
            ],
    		"runtimeParams": [
    			{
    				"type": "DTRes *&",
    				"name": "res"
    			},
    			{
    				"type": "const DTLhs *",
    				"name": "lhs"
    			},
    			{
    				"type": "const DTRhs *",
    				"name": "rhs"
    			},
    			{
    				"type": "const char **",
    				"name": "lhsOn"
    			},
    			{
    				"type": "size_t",
    				"name": "numLhsOn"
    			},
    			{
    				"type": "const char **",
    				"name": "rhsOn"
    			},
    			{
    				"type": "size_t",
    				"name": "numRhsOn"
    			},
    			{
    				"type": "CompareOperation *",
    				"name": "cmp"
    			},
    			{
    				"type": "size_t",
    				"name": "numCmp"
    			}
    		]
    	},
    	"instantiations": [
    		["Frame", "Frame", "Frame"]
    	]
    },
    {
        "kernelTemplate": {
            "header": "Map.h",
            "opName": "map",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTArg",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const DTArg *",
                    "name": "arg"
                },
                {
                    "type": "void *",
                    "name": "func"
                }
            ]
        },
        "instantiations": [
            [["DenseMatrix", "double"], ["DenseMatrix", "double"]],
            [["DenseMatrix", "double"], ["DenseMatrix", "float"]],
            [["DenseMatrix", "double"], ["DenseMatrix", "int64_t"]],
            [["DenseMatrix", "double"], ["DenseMatrix", "int32_t"]],
            [["DenseMatrix", "double"], ["DenseMatrix", "int8_t"]],
            [["DenseMatrix", "double"], ["DenseMatrix", "uint64_t"]],
            [["DenseMatrix", "double"], ["DenseMatrix", "uint32_t"]],
            [["DenseMatrix", "double"], ["DenseMatrix", "uint8_t"]],

            [["DenseMatrix", "float"], ["DenseMatrix", "double"]],
            [["DenseMatrix", "float"], ["DenseMatrix", "float"]],
            [["DenseMatrix", "float"], ["DenseMatrix", "int64_t"]],
            [["DenseMatrix", "float"], ["DenseMatrix", "int32_t"]],
            [["DenseMatrix", "float"], ["DenseMatrix", "int8_t"]],
            [["DenseMatrix", "float"], ["DenseMatrix", "uint64_t"]],
            [["DenseMatrix", "float"], ["DenseMatrix", "uint32_t"]],
            [["DenseMatrix", "float"], ["DenseMatrix", "uint8_t"]],

            [["DenseMatrix", "int64_t"], ["DenseMatrix", "double"]],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "float"]],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"]],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "int32_t"]],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "int8_t"]],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "uint64_t"]],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "uint32_t"]],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "uint8_t"]],

            [["DenseMatrix", "int32_t"], ["DenseMatrix", "double"]],
            [["DenseMatrix", "int32_t"], ["DenseMatrix", "float"]],
            [["DenseMatrix", "int32_t"], ["DenseMatrix", "int64_t"]],
            [["DenseMatrix", "int32_t"], ["DenseMatrix", "int32_t"]],
            [["DenseMatrix", "int32_t"], ["DenseMatrix", "int8_t"]],
            [["DenseMatrix", "int32_t"], ["DenseMatrix", "uint64_t"]],
            [["DenseMatrix", "int32_t"], ["DenseMatrix", "uint32_t"]],
            [["DenseMatrix", "int32_t"], ["DenseMatrix", "uint8_t"]],

            [["DenseMatrix", "int8_t"], ["DenseMatrix", "double"]],
            [["DenseMatrix", "int8_t"], ["DenseMatrix", "float"]],
            [["DenseMatrix", "int8_t"], ["DenseMatrix", "int64_t"]],
            [["DenseMatrix", "int8_t"], ["DenseMatrix", "int32_t"]],
            [["DenseMatrix", "int8_t"], ["DenseMatrix", "int8_t"]],
            [["DenseMatrix", "int8_t"], ["DenseMatrix", "uint64_t"]],
            [["DenseMatrix", "int8_t"], ["DenseMatrix", "uint32_t"]],
            [["DenseMatrix", "int8_t"], ["DenseMatrix", "uint8_t"]],

            [["DenseMatrix", "uint64_t"], ["DenseMatrix", "double"]],
            [["DenseMatrix", "uint64_t"], ["DenseMatrix", "float"]],
            [["DenseMatrix", "uint64_t"], ["DenseMatrix", "int64_t"]],
            [["DenseMatrix", "uint64_t"], ["DenseMatrix", "int32_t"]],
            [["DenseMatrix", "uint64_t"], ["DenseMatrix", "int8_t"]],
            [["DenseMatrix", "uint64_t"], ["DenseMatrix", "uint64_t"]],
            [["DenseMatrix", "uint64_t"], ["DenseMatrix", "uint32_t"]],
            [["DenseMatrix", "uint64_t"], ["DenseMatrix", "uint8_t"]],

            [["DenseMatrix", "uint32_t"], ["DenseMatrix", "double"]],
            [["DenseMatrix", "uint32_t"], ["DenseMatrix", "float"]],
            [["DenseMatrix", "uint32_t"], ["DenseMatrix", "int64_t"]],
            [["DenseMatrix", "uint32_t"], ["DenseMatrix", "int32_t"]],
            [["DenseMatrix", "uint32_t"], ["DenseMatrix", "int8_t"]],
            [["DenseMatrix", "uint32_t"], ["DenseMatrix", "uint64_t"]],
            [["DenseMatrix", "uint32_t"], ["DenseMatrix", "uint32_t"]],
            [["DenseMatrix", "uint32_t"], ["DenseMatrix", "uint8_t"]],

            [["DenseMatrix", "uint8_t"], ["DenseMatrix", "double"]],
            [["DenseMatrix", "uint8_t"], ["DenseMatrix", "float"]],
            [["DenseMatrix", "uint8_t"], ["DenseMatrix", "int64_t"]],
            [["DenseMatrix", "uint8_t"], ["DenseMatrix", "int32_t"]],
            [["DenseMatrix", "uint8_t"], ["DenseMatrix", "int8_t"]],
            [["DenseMatrix", "uint8_t"], ["DenseMatrix", "uint64_t"]],
            [["DenseMatrix", "uint8_t"], ["DenseMatrix", "uint32_t"]],
            [["DenseMatrix", "uint8_t"], ["DenseMatrix", "uint8_t"]]
        ]
    },
    {
        "kernelTemplate": {
            "header": "MatMul.h",
            "opName": "matMul",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTLhs",
                    "isDataType": true
                },
                {
                    "name": "DTRhs",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const DTLhs *",
                    "name": "lhs"
                },
                {
                    "type": "const DTRhs *",
                    "name": "rhs"
                },
                {
                    "type": "bool",
                    "name": "transa"
                },
                {
                    "type": "bool",
                    "name": "transb"
                }
            ]
        },
        "api": [
            {
                "name":  ["CUDA", "CPP"],
                "instantiations": [
                    [["DenseMatrix", "float"], ["DenseMatrix", "float"], ["DenseMatrix", "float"]],
                    [["DenseMatrix", "double"], ["DenseMatrix", "double"], ["DenseMatrix", "double"]]
                ]
            },
            {
                "name":  ["CPP"],
                "instantiations": [
                    [["DenseMatrix", "int32_t"], ["DenseMatrix", "int32_t"], ["DenseMatrix", "int32_t"]],
                    [["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"]],
                    [["DenseMatrix", "double"], ["CSRMatrix", "double"], ["DenseMatrix", "double"]]
                ]
            },
             {
                "name":  ["FPGAOPENCL"],
                "instantiations": [
                    [["DenseMatrix", "float"], ["DenseMatrix", "float"], ["DenseMatrix", "float"]]
                ]
            }
        ]
    },
    {
        "kernelTemplate": {
            "header": "Now.h",
            "opName": "now",
            "returnType": "int64_t",
            "templateParams": [],
            "runtimeParams": []
        },
        "instantiations": [
            []
        ]
    },
    {
        "kernelTemplate": {
            "header": "OneHot.h",
            "opName": "oneHot",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTArg",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const DTArg *",
                    "name": "arg"
                },
                {
                    "type": "const DenseMatrix<int64_t> *",
                    "name": "info"
                }
            ]
        },
        "instantiations": [
            [["DenseMatrix", "double"], ["DenseMatrix", "double"]],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"]]
        ]
    },
    {
        "kernelTemplate": {
            "header": "Recode.h",
            "opName": "recode",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTDict",
                    "isDataType": true
                },
                {
                    "name": "DTArg",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "DTDict *&",
                    "name": "dict"
                },
                {
                    "type": "const DTArg *",
                    "name": "arg"
                },
                {
                    "type": "bool",
                    "name": "orderPreserving"
                }
            ]
        },
        "instantiations": [
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "double"], ["DenseMatrix", "double"]],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "float"], ["DenseMatrix", "float"]],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"]]
        ]
    },
    {
        "kernelTemplate": {
            "header": "Bin.h",
            "opName": "bin",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTArg",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const DTArg *",
                    "name": "arg"
                },
                {
                    "type": "int64_t",
                    "name": "numBins"
                },
                {
                    "type": "typename DTArg::VT",
                    "name": "min"
                },
                {
                    "type": "typename DTArg::VT",
                    "name": "max"
                }
            ]
        },
        "instantiations": [
            [["DenseMatrix", "double"], ["DenseMatrix", "double"]],
            [["DenseMatrix", "float"], ["DenseMatrix", "float"]],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"]]
        ]
    },
    {
        "kernelTemplate": {
            "header": "PrintSca.h",
            "opName": "printSca",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "VT",
                    "isDataType": false
                }
            ],
            "runtimeParams": [
                {
                    "type": "VT",
                    "name": "arg"
                },
                {
                    "type": "bool",
                    "name": "newline"
                },
                {
                    "type": "bool",
                    "name": "err"
                }
            ]
        },
        "instantiations": [
            ["double"],
            ["float"],
            ["int64_t"],
            ["int32_t"],
            ["int8_t"],
            ["uint64_t"],
            ["uint32_t"],
            ["uint8_t"],
            ["bool"],
            ["size_t"]
        ]
    },
    {
        "kernelTemplate": {
            "header": "PrintObj.h",
            "opName": "printObj",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DT",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "const DT *",
                    "name": "arg"
                },
                {
                    "type": "bool",
                    "name": "newline"
                },
                {
                    "type": "bool",
                    "name": "err"
                }
            ]
        },
        "instantiations": [
            [["DenseMatrix", "double"]],
            [["DenseMatrix", "float"]],
            [["DenseMatrix", "int64_t"]],
            [["DenseMatrix", "int32_t"]],
            [["DenseMatrix", "int8_t"]],
            [["DenseMatrix", "uint64_t"]],
            [["DenseMatrix", "uint32_t"]],
            [["DenseMatrix", "uint8_t"]],
            [["DenseMatrix", "bool"]],
            [["DenseMatrix", "size_t"]],
            [["CSRMatrix", "double"]],
            [["CSRMatrix", "float"]],
            [["CSRMatrix", "int64_t"]],
            [["CSRMatrix", "uint8_t"]],
            ["Frame"],
            ["char"]
        ]
    },
    {
        "kernelTemplate": {
            "header": "RandMatrix.h",
            "opName": "randMatrix",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "VTArg",
                    "isDataType": false
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "size_t",
                    "name": "numRows"
                },
                {
                    "type": "size_t",
                    "name": "numCols"
                },
                {
                    "type": "VTArg",
                    "name": "min"
                },
                {
                    "type": "VTArg",
                    "name": "max"
                },
                {
                    "type": "double",
                    "name": "sparsity"
                },
                {
                    "type": "int64_t",
                    "name": "seed"
                }
            ]
        },
        "instantiations": [
            [["DenseMatrix", "double"], "double"],
            [["DenseMatrix", "float"], "float"],
            [["DenseMatrix", "int64_t"], "int64_t"],
            [["DenseMatrix", "uint8_t"], "uint8_t"],
            [["CSRMatrix", "double"], "double"],
            [["CSRMatrix", "int64_t"], "int64_t"]
        ]
    },
    {
        "kernelTemplate": {
            "header": "Sample.h",
            "opName": "sample",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "VTArg",
                    "isDataType": false
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "VTArg",
                    "name": "range"
                },
                {
                    "type": "size_t",
                    "name": "size"
                },
                {
                    "type": "bool",
                    "name": "withReplacement"
                },
                {
                    "type": "int64_t",
                    "name": "seed"
                }
            ]
        },
        "instantiations": [
            [["DenseMatrix", "double"], "double"],
            [["DenseMatrix", "int64_t"], "int64_t"]
        ]
    },
    {
        "kernelTemplate": {
            "header": "Reverse.h",
            "opName": "reverse",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTArg",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const DTArg *",
                    "name": "arg"
                }
            ]
        },
        "instantiations": [
            [["DenseMatrix", "double"], ["DenseMatrix", "double"]],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"]]
        ]
    },
    {
        "kernelTemplate": {
            "header": "Read.h",
            "opName": "read",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const char *",
                    "name": "filename"
                }
            ]
        },
        "instantiations": [
            [["DenseMatrix", "float"]],
            [["DenseMatrix", "double"]],
            [["DenseMatrix", "int64_t"]],
            [["DenseMatrix", "uint8_t"]],
            [["CSRMatrix", "double"]],
            [["CSRMatrix", "float"]],
            ["Frame"]
        ]
    },
    {
        "kernelTemplate": {
            "header": "GetColIdx.h",
            "opName": "getColIdx",
            "returnType": "size_t",
            "templateParams": [],
            "runtimeParams": [
                {
                    "type": "const Frame *",
                    "name": "arg"
                },
                {
                    "type": "const char *",
                    "name": "colName"
                }
            ]
        },
        "instantiations": [[]]
    },
    {
        "kernelTemplate": {
            "header": "Write.h",
            "opName": "write",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTArg",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "const DTArg *",
                    "name": "arg"
                },
                {
                    "type": "const char *",
                    "name": "filename"
                }
            ]
        },
        "instantiations": [
            [["DenseMatrix", "float"]],
            [["DenseMatrix", "double"]],
            [["DenseMatrix", "int64_t"]],
            [["DenseMatrix", "uint8_t"]],
            ["Frame"]
        ]
    },
    {
        "kernelTemplate": {
            "header": "SaveDaphneLibResult.h",
            "opName": "saveDaphneLibResult",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTArg",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "const DTArg *",
                    "name": "arg"
                }
            ]
        },
        "instantiations": [
            [["DenseMatrix", "double"]],
            [["DenseMatrix", "float"]],
            [["DenseMatrix", "int64_t"]],
            [["DenseMatrix", "int32_t"]],
            [["DenseMatrix", "int8_t"]],
            [["DenseMatrix", "uint64_t"]],
            [["DenseMatrix", "uint32_t"]],
            [["DenseMatrix", "uint8_t"]],
            ["Frame"]
        ]
    },
    {
        "kernelTemplate": {
            "header": "ReceiveFromNumpy.h",
            "opName": "receiveFromNumpy",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "uint32_t",
                    "name": "upper"
                },
                {
                    "type": "uint32_t",
                    "name": "lower"
                },
                {
                    "type": "int64_t",
                    "name": "rows"
                },
                {
                    "type": "int64_t",
                    "name": "cols"
                }
            ]
        },
        "instantiations": [
            [["DenseMatrix", "double"]],
            [["DenseMatrix", "float"]],
            [["DenseMatrix", "int64_t"]],
            [["DenseMatrix", "int32_t"]],
            [["DenseMatrix", "int8_t"]],
            [["DenseMatrix", "uint64_t"]],
            [["DenseMatrix", "uint32_t"]],
            [["DenseMatrix", "uint8_t"]]
        ]
    },
    {
        "kernelTemplate": {
            "header": "Replace.h",
            "opName": "replace",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTArg",
                    "isDataType": true
                },
                {
                    "name": "VT",
                    "isDataType": false
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const DTArg *",
                    "name": "arg"
                },
                {
                    "type": "VT",
                    "name": "pattern"
                },
                {
                    "type": "VT",
                    "name": "replacement"
                }
            ]
        },
        "instantiations": [
            [["DenseMatrix", "double"], ["DenseMatrix", "double"], "double"],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"], "int64_t"]
        ]
    },
    {
        "kernelTemplate": {
            "header": "Reshape.h",
            "opName": "reshape",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTArg",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const DTArg *",
                    "name": "arg"
                },
                {
                    "type": "size_t",
                    "name": "numRows"
                },
                {
                    "type": "size_t",
                    "name": "numCols"
                }
            ]
        },
        "instantiations": [
            [["DenseMatrix", "double"], ["DenseMatrix", "double"]],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"]],
            [["DenseMatrix", "bool"], ["DenseMatrix", "bool"]]
        ]
    },
    {
        "kernelTemplate": {
            "header": "SemiJoin.h",
            "opName": "semiJoin",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "VTLhsTid",
                    "isDataType": false
                }
            ],
            "runtimeParams": [
                {
                    "type": "Frame *&",
                    "name": "res"
                },
                {
                    "type": "DenseMatrix<VTLhsTid> *&",
                    "name": "lhsTid"
                },
                {
                    "type": "const Frame *",
                    "name": "lhs"
                },
                {
                    "type": "const Frame *",
                    "name": "rhs"
                },
                {
                    "type": "const char *",
                    "name": "lhsOn"
                },
                {
                    "type": "const char *",
                    "name": "rhsOn"
                }
            ]
        },
        "instantiations": [
            ["int64_t"],
            ["size_t"]
        ]
    },
    {
        "kernelTemplate": {
            "header": "SetColLabels.h",
            "opName": "setColLabels",
            "returnType": "void",
            "templateParams": [],
            "runtimeParams": [
                {
                    "type": "Frame *&",
                    "name": "res"
                },
                {
                    "type": "const Frame *",
                    "name": "arg"
                },
                {
                    "type": "const char **",
                    "name": "labels"
                },
                {
                    "type": "size_t",
                    "name": "numLabels"
                }
            ]
        },
        "instantiations": [
            []
        ]
    },
    {
        "kernelTemplate": {
            "header": "SetColLabelsPrefix.h",
            "opName": "setColLabelsPrefix",
            "returnType": "void",
            "templateParams": [],
            "runtimeParams": [
                {
                    "type": "Frame *&",
                    "name": "res"
                },
                {
                    "type": "const Frame *",
                    "name": "arg"
                },
                {
                    "type": "const char *",
                    "name": "prefix"
                }
            ]
        },
        "instantiations": [
            []
        ]
    },
    {
        "kernelTemplate": {
            "header": "Transpose.h",
            "opName": "transpose",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTArg",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const DTArg *",
                    "name": "arg"
                }
            ]
        },
        "api": [
            {
                "name":  ["CUDA", "CPP"],
                "instantiations": [
                    [["DenseMatrix", "double"], ["DenseMatrix", "double"]],
                    [["DenseMatrix", "float"], ["DenseMatrix", "float"]],
                    [["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"]],
                    [["DenseMatrix", "size_t"], ["DenseMatrix", "size_t"]]]
            },
            {
                "name":  ["CPP"],
                "instantiations": [
                    [["CSRMatrix", "double"], ["CSRMatrix", "double"]],
                    [["CSRMatrix", "float"], ["CSRMatrix", "float"]],
                    [["CSRMatrix", "int64_t"], ["CSRMatrix", "int64_t"]]]
            }
        ]
    },
    {
        "kernelTemplate": {
            "header": "EwUnaryMat.h",
            "opName": "ewUnaryMat",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTArg",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "UnaryOpCode",
                    "name": "opCode"
                },
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const DTArg *",
                    "name": "arg"
                }
            ]
        },
        "instantiations": [
            [["DenseMatrix", "double"],["DenseMatrix", "double"]],
            [["DenseMatrix", "int64_t"],["DenseMatrix", "int64_t"]]
        ],
        "opCodes": ["SIGN", "SQRT", "EXP", "ABS", "FLOOR", "CEIL", "ROUND", "LN",
                    "SIN", "COS", "TAN", "ASIN", "ACOS", "ATAN", "SINH", "COSH", "TANH"]
    },
    {
        "kernelTemplate": {
            "header": "EwUnarySca.h",
            "opName": "ewUnarySca",
            "returnType": "TRes",
            "templateParams": [
                {
                    "name": "TRes",
                    "isDataType": false
                },
                {
                    "name": "TArg",
                    "isDataType": false
                }
            ],
            "runtimeParams": [
                {
                    "type": "UnaryOpCode",
                    "name": "opCode"
                },
                {
                    "type": "TArg",
                    "name": "arg"
                }
            ]
        },
        "instantiations": [
            ["double", "double"],
            ["float", "float"],
            ["int64_t", "int64_t"]
        ],
        "opCodes": ["SIGN", "SQRT", "EXP", "ABS", "FLOOR", "CEIL", "ROUND", "LN",
                    "SIN", "COS", "TAN", "ASIN", "ACOS", "ATAN", "SINH", "COSH", "TANH"]
    },
    {
        "kernelTemplate": {
            "header": "NumCols.h",
            "opName": "numCols",
            "returnType": "size_t",
            "templateParams": [],
            "runtimeParams": [
                {
                    "type": "const Structure *",
                    "name": "arg"
                }
            ]
        },
        "instantiations": [
            []
        ]
    },
    {
        "kernelTemplate": {
            "header": "NumRows.h",
            "opName": "numRows",
            "returnType": "size_t",
            "templateParams": [],
            "runtimeParams": [
                {
                    "type": "const Structure *",
                    "name": "arg"
                }
            ]
        },
        "instantiations": [
            []
        ]
    },
    {
        "kernelTemplate": {
            "header": "NumCells.h",
            "opName": "numCells",
            "returnType": "size_t",
            "templateParams": [],
            "runtimeParams": [
                {
                    "type": "const Structure *",
                    "name": "arg"
                }
            ]
        },
        "instantiations": [
            []
        ]
    },
    {
        "kernelTemplate": {
            "header": "Seq.h",
            "opName": "seq",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DT",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "DT *&",
                    "name": "res"
                },
                {
                    "type": "typename DT::VT",
                    "name": "start"
                },
                {
                    "type": "typename DT::VT",
                    "name": "end"
                },
                {
                    "type": "typename DT::VT",
                    "name": "inc"
                }
            ]
        },
        "instantiations": [
            [["DenseMatrix", "double"]],
            [["DenseMatrix", "float"]],
            [["DenseMatrix", "int64_t"]]
        ]
    },
    {
        "kernelTemplate": {
            "header": "Solve.h",
            "opName": "solve",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTLhs",
                    "isDataType": true
                },
                {
                    "name": "DTRhs",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const DTLhs *",
                    "name": "lhs"
                },
                {
                    "type": "const DTRhs *",
                    "name": "rhs"
                }
            ]
        },
        "api": [
            {
                "name":  ["CUDA", "CPP"],
                "instantiations": [
                    [["DenseMatrix", "float"], ["DenseMatrix", "float"], ["DenseMatrix", "float"]],
                    [["DenseMatrix", "double"], ["DenseMatrix", "double"], ["DenseMatrix", "double"]]]
            }
        ]
    },
    {
        "kernelTemplate": {
            "header": "Syrk.h",
            "opName": "syrk",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTArg",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const DTArg *",
                    "name": "arg"
                }
            ]
        },
        "api": [
            {
                "name":  ["CUDA", "CPP"],
                "instantiations": [[["DenseMatrix", "float"], ["DenseMatrix", "float"]],
                                   [["DenseMatrix", "double"], ["DenseMatrix", "double"]]]
            },
             {
                "name":  ["FPGAOPENCL"],
                "instantiations": [
                    [["DenseMatrix", "float"], ["DenseMatrix", "float"]]
                ]
            }
 
        ]
    },
    {
        "kernelTemplate": {
            "header": "Gemv.h",
            "opName": "gemv",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTMat",
                    "isDataType": true
                },
                {
                    "name": "DTVec",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const DTMat *",
                    "name": "mat"
                },
                {
                    "type": "const DTVec *",
                    "name": "vec"
                }
            ]
        },
        "api": [
            {
                "name":  ["CUDA", "CPP"],
                "instantiations": [
                    [["DenseMatrix", "double"], ["DenseMatrix", "double"], ["DenseMatrix", "double"]],
                    [["DenseMatrix", "float"], ["DenseMatrix", "float"], ["DenseMatrix", "float"]]
                ]
            },
            {
                "name":  ["CPP"],
                "instantiations": [
                    [["DenseMatrix", "double"], ["CSRMatrix", "double"], ["DenseMatrix", "double"]]
                ]
            }
       ]
    },
    {
        "kernelTemplate": {
            "header": "Tri.h",
            "opName": "tri",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DT",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "DT *&",
                    "name": "res"
                },
                {
                    "type": "const DT *",
                    "name": "arg"
                },
                {
                    "type": "bool",
                    "name": "upper"
                },
                {
                    "type": "bool",
                    "name": "diag"
                },
                {
                    "type": "bool",
                    "name": "values"
                }
            ]
        },
        "instantiations": [
            [["DenseMatrix", "double"]],
            [["DenseMatrix", "float"]],
            [["DenseMatrix", "int64_t"]],
            [["CSRMatrix", "double"]],
            [["CSRMatrix", "int64_t"]]
        ]
    },
    {
        "kernelTemplate": {
            "header": "VectorizedPipeline.h",
            "opName": "vectorizedPipeline",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes **",
                    "name": "outputs"
                },
                {
                    "type": "size_t",
                    "name": "numOutputs"
                },
                {
                    "type": "bool *",
                    "name": "isScalar"
                },
                {
                    "type": "Structure **",
                    "name": "inputs"
                },
                {
                    "type": "size_t",
                    "name": "numInputs"
                },
                {
                    "type": "int64_t *",
                    "name": "outRows"
                },
                {
                    "type": "int64_t *",
                    "name": "outCols"
                },
                {
                    "type": "int64_t *",
                    "name": "splits"
                },
                {
                    "type": "int64_t *",
                    "name": "combines"
                },
                {
                    "type": "size_t",
                    "name": "numFuncs"
                },
                {
                    "type": "void **",
                    "name": "fun"
                }
            ]
        },
        "instantiations": [
            [["DenseMatrix", "double"]],
            [["DenseMatrix", "float"]],
            [["DenseMatrix", "int64_t"]],
            [["CSRMatrix", "double"]],
            [["CSRMatrix", "float"]]
        ]
    },
    {
        "kernelTemplate": {
            "header": "IncRef.h",
            "opName": "incRef",
            "returnType": "void",
            "templateParams": [],
            "runtimeParams": [
                {
                    "type": "const Structure *",
                    "name": "arg"
                }
            ]
        },
        "instantiations": [
            []
        ]
    },
    {
        "kernelTemplate": {
            "header": "DecRef.h",
            "opName": "decRef",
            "returnType": "void",
            "templateParams": [],
            "runtimeParams": [
                {
                    "type": "const Structure *",
                    "name": "arg"
                }
            ]
        },
        "instantiations": [
            []
        ]
    },
    {
        "kernelTemplate": {
            "header": "SliceRow.h",
            "opName": "sliceRow",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTArg",
                    "isDataType": true
                },
                {
                    "name": "VTSel",
                    "isDataType": false
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const DTArg *",
                    "name": "arg"
                },
                {
                    "type": "const VTSel",
                    "name": "lowerIncl"
                },
                {
                    "type": "const VTSel",
                    "name": "upperExcl"
                }
            ]
        },
        "instantiations": [
            [["DenseMatrix", "double"], ["DenseMatrix", "double"], "int64_t"],
            [["DenseMatrix", "float"], ["DenseMatrix", "float"], "int64_t"],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"], "int64_t"],
            ["Frame", "Frame", "int64_t"]
        ]
    },

    {
        "kernelTemplate": {
            "header": "SliceCol.h",
            "opName": "sliceCol",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTArg",
                    "isDataType": true
                },
                {
                    "name": "VTSel",
                    "isDataType": false
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const DTArg *",
                    "name": "arg"
                },
                {
                    "type": "const VTSel",
                    "name": "lowerIncl"
                },
                {
                    "type": "const VTSel",
                    "name": "upperExcl"
                }
            ]
        },
        "instantiations": [
            [["DenseMatrix", "double"], ["DenseMatrix", "double"], "int64_t"],
            [["DenseMatrix", "float"], ["DenseMatrix", "float"], "int64_t"],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"], "int64_t"],
            ["Frame", "Frame", "int64_t"]
        ]
    },
    {
        "kernelTemplate": {
            "header": "InsertRow.h",
            "opName": "insertRow",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTArg",
                    "isDataType": true
                },
                {
                    "name": "DTIns",
                    "isDataType": true
                },
                {
                    "name": "VTSel",
                    "isDataType": false
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTArg *&",
                    "name": "res"
                },
                {
                    "type": "const DTArg *",
                    "name": "arg"
                },
                {
                    "type": "const DTIns *",
                    "name": "ins"
                },
                {
                    "type": "const VTSel",
                    "name": "rowLowerIncl"
                },
                {
                    "type": "const VTSel",
                    "name": "rowUpperExcl"
                }
            ]
        },
        "instantiations": [
            [["DenseMatrix", "double"], ["DenseMatrix", "double"], "int64_t"],
            [["DenseMatrix", "float"], ["DenseMatrix", "float"], "int64_t"],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"], "int64_t"]
        ]
    },
    {
        "kernelTemplate": {
            "header": "InsertCol.h",
            "opName": "insertCol",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTArg",
                    "isDataType": true
                },
                {
                    "name": "DTIns",
                    "isDataType": true
                },
                {
                    "name": "VTSel",
                    "isDataType": false
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTArg *&",
                    "name": "res"
                },
                {
                    "type": "const DTArg *",
                    "name": "arg"
                },
                {
                    "type": "const DTIns *",
                    "name": "ins"
                },
                {
                    "type": "const VTSel",
                    "name": "colLowerIncl"
                },
                {
                    "type": "const VTSel",
                    "name": "colUpperExcl"
                }
            ]
        },
        "instantiations": [
            [["DenseMatrix", "double"], ["DenseMatrix", "double"], "int64_t"],
            [["DenseMatrix", "float"], ["DenseMatrix", "float"], "int64_t"],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"], "int64_t"]
        ]
    },
    {
        "kernelTemplate": {
            "header": "Pooling.h",
            "opName": "Pooling::Forward",
            "returnType": "void",
            "opCodeAsTemplateParam": 1,
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTArg",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "PoolingOpCode",
                    "name": "opcode"
                },
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                { "type": "size_t& ", "name": "res_h" },
                { "type": "size_t& ", "name": "res_w" },
                {
                    "type": "const DTArg *",
                    "name": "data"
                },
                { "type": "size_t", "name": "batch_size" },
                { "type": "size_t", "name": "num_channls"},
                { "type": "size_t", "name": "img_h"},
                { "type": "size_t", "name": "img_w"},
                { "type": "size_t", "name": "pool_h"},
                { "type": "size_t", "name": "pool_w"},
                { "type": "size_t", "name": "stride_h"},
                { "type": "size_t", "name": "stride_w"},
                { "type": "size_t", "name": "pad_h"},
                { "type": "size_t", "name": "pad_w"}
            ]
        },
        "api": [
            {
                "name":  ["CUDA", "CPP"],
                "instantiations": [
                    [["DenseMatrix", "float"], ["DenseMatrix", "float"]],
                    [["DenseMatrix", "double"], ["DenseMatrix", "double"]]
                ],
                "opCodes": ["AVG", "MAX"]
            }
        ]
    },
    {
        "kernelTemplate": {
            "header": "RowBind.h",
            "opName": "rowBind",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTUp",
                    "isDataType": true
                },
                {
                    "name": "DTLow",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const DTUp *",
                    "name": "up"
                },
                {
                    "type": "const DTLow *",
                    "name": "low"
                }
            ]
        },
        "instantiations": [
            [["DenseMatrix", "double"], ["DenseMatrix", "double"], ["DenseMatrix", "double"]],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"]],
            [["CSRMatrix", "double"], ["CSRMatrix", "double"], ["CSRMatrix", "double"]],
            [["CSRMatrix", "int64_t"], ["CSRMatrix", "int64_t"], ["CSRMatrix", "int64_t"]],
            ["Frame", "Frame", "Frame"]
        ]
    },
    {
        "kernelTemplate": {
            "header": "Quantize.h",
            "opName": "quantize",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTArg",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const DTArg *",
                    "name": "arg"
                },
                { "type": "float", "name": "min" },
                { "type": "float", "name": "max"}
            ]
	},
        "instantiations": [
            [["DenseMatrix", "uint8_t"], ["DenseMatrix", "float"]]
	]
    },
    {
        "kernelTemplate": {
            "header": "Activation.h",
            "opName": "Activation::Forward",
            "returnType": "void",
            "opCodeAsTemplateParam": 1,
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTArg",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "ActivationOpCode",
                    "name": "opcode"
                },
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const DTArg *",
                    "name": "data"
                }
            ]
        },
        "api": [
            {
                "name":  ["CUDA", "CPP"],
                "instantiations": [
                    [["DenseMatrix", "float"], ["DenseMatrix", "float"]],
                    [["DenseMatrix", "double"], ["DenseMatrix", "double"]]
                ],
                "opCodes": ["ReLU"]
            }
        ]
    },
    {
        "kernelTemplate": {
            "header": "Affine.h",
            "opName": "Affine::Forward",
            "returnType": "void",
            "opCodeAsTemplateParam": 1,
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTArg",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const DTArg *",
                    "name": "data"
                },
                {
                    "type": "const DTArg *",
                    "name": "weights"
                },
                {
                    "type": "const DTArg *",
                    "name": "bias"
                }
            ]
        },
        "api": [
            {
                "name":  ["CUDA"],
                "instantiations": [
                    [["DenseMatrix", "float"], ["DenseMatrix", "float"]],
                    [["DenseMatrix", "double"], ["DenseMatrix", "double"]]
                ]
            }
        ]
    },
    {
        "kernelTemplate": {
            "header": "BatchNorm.h",
            "opName": "BatchNorm::Forward",
            "returnType": "void",
            "opCodeAsTemplateParam": 1,
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTArg",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const DTArg *",
                    "name": "data"
                },
                {
                    "type": "const DTArg *",
                    "name": "gamma"
                },
                {
                    "type": "const DTArg *",
                    "name": "beta"
                },
                {
                    "type": "const DTArg *",
                    "name": "ema_mean"
                },
                {
                    "type": "const DTArg *",
                    "name": "ema_var"
                },
                {
                    "type": "typename DTArg::VT",
                    "name": "eps"
                }
            ]
        },
        "api": [
            {
                "name":  ["CUDA"],
                "instantiations": [
                    [["DenseMatrix", "float"], ["DenseMatrix", "float"]],
                    [["DenseMatrix", "double"], ["DenseMatrix", "double"]]
                ]
            }
        ]
    },
    {
        "kernelTemplate": {
            "header": "Convolution.h",
            "opName": "Convolution::Forward",
            "returnType": "void",
            "opCodeAsTemplateParam": 1,
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTArg",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "size_t& ",
                    "name": "res_h"
                },
                {
                    "type": "size_t& ",
                    "name": "res_w"
                },
                {
                    "type": "const DTArg *",
                    "name": "data"
                },
                {
                    "type": "const DTArg *",
                    "name": "filter"
                },
                {
                    "type": "const DTArg *",
                    "name": "bias"
                },
                {
                    "type": "size_t",
                    "name": "batch_size"
                },
                {
                    "type": "size_t",
                    "name": "num_channels"
                },
                {
                    "type": "size_t",
                    "name": "img_h"
                },
                {
                    "type": "size_t",
                    "name": "img_w"
                },
                {
                    "type": "size_t",
                    "name": "filter_h"
                },
                {
                    "type": "size_t",
                    "name": "filter_w"
                },
                {
                    "type": "size_t",
                    "name": "stride_h"
                },
                {
                    "type": "size_t",
                    "name": "stride_w"
                },
                {
                    "type": "size_t",
                    "name": "pad_h"
                },
                {
                    "type": "size_t",
                    "name": "pad_w"
                }
            ]
        },
        "api": [
            {
                "name":  ["CUDA"],
                "instantiations": [
                    [["DenseMatrix", "float"], ["DenseMatrix", "float"]],
                    [["DenseMatrix", "double"], ["DenseMatrix", "double"]]
                ]
            }
        ]
    },
    {
        "kernelTemplate": {
            "header": "Softmax.h",
            "opName": "Softmax::Forward",
            "returnType": "void",
            "opCodeAsTemplateParam": 1,
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTArg",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const DTArg *",
                    "name": "data"
                }
            ]
        },
        "api": [
            {
                "name":  ["CUDA"],
                "instantiations": [
                    [["DenseMatrix", "float"], ["DenseMatrix", "float"]],
                    [["DenseMatrix", "double"], ["DenseMatrix", "double"]]
                ]
            }
        ]
    },
    {
        "kernelTemplate": {
            "header": "BiasAdd.h",
            "opName": "BiasAdd::Forward",
            "returnType": "void",
            "opCodeAsTemplateParam": 1,
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTArg",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const DTArg *",
                    "name": "input"
                },
                {
                    "type": "const DTArg *",
                    "name": "bias"
                }
            ]
        },
        "api": [
            {
                "name":  ["CUDA"],
                "instantiations": [
                    [["DenseMatrix", "float"], ["DenseMatrix", "float"]],
                    [["DenseMatrix", "double"], ["DenseMatrix", "double"]]
                ]
            }
        ]
    },
    {
        "kernelTemplate": {
            "header": "Order.h",
            "opName": "order",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                },
                {
                    "name": "DTArg",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes *&",
                    "name": "res"
                },
                {
                    "type": "const DTArg *",
                    "name": "arg"
                },
                {
                    "type": "size_t *",
                    "name": "colIdxs",
                    "isVariadic": true
                },
                {
                    "type": "size_t",
                    "name": "numColIdxs"
                },
                {
                    "type": "bool *",
                    "name": "ascending",
                    "isVariadic": true
                },
                {
                    "type": "size_t",
                    "name": "numAscending"
                },
                {
                    "type": "bool",
                    "name": "returnIdxs"
                }
            ]
        },
        "instantiations": [
            ["Frame", "Frame"],
            [["DenseMatrix", "size_t"], "Frame"],
            [["DenseMatrix", "double"], ["DenseMatrix", "double"]],
            [["DenseMatrix", "size_t"], ["DenseMatrix", "double"]],
            [["DenseMatrix", "float"], ["DenseMatrix", "float"]],
            [["DenseMatrix", "size_t"], ["DenseMatrix", "float"]],
            [["DenseMatrix", "int64_t"], ["DenseMatrix", "int64_t"]],
            [["DenseMatrix", "size_t"], ["DenseMatrix", "int64_t"]]
        ]
    },
    {
        "kernelTemplate": {
            "header": "Group.h",
            "opName": "group",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DT",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "DT *&",
                    "name": "res"
                },
                {
                    "type": "const DT *",
                    "name": "arg"
                },
                {
                    "type": "const char **",
                    "name": "keyCols"
                },
                {
                    "type": "size_t",
                    "name": "numKeyCols"
                },
                {
                    "type": "const char **",
                    "name": "aggCols"
                },
                {
                    "type": "size_t",
                    "name": "numAggCols"
                },
                {
                    "type": "mlir::daphne::GroupEnum *",
                    "name": "aggFuncs",
                    "isVariadic": true
                },
                {
                    "type": "size_t",
                    "name": "numAggFuncs"
                }
            ]
        },
        "instantiations": [
            ["Frame"]
        ]
    },
    {
        "kernelTemplate": {
            "header": "DistributedPipeline.h",
            "opName": "distributedPipeline",
            "returnType": "void",
            "templateParams": [
                {
                    "name": "DTRes",
                    "isDataType": true
                }
            ],
            "runtimeParams": [
                {
                    "type": "DTRes **",
                    "name": "outputs"
                },
                {
                    "type": "size_t",
                    "name": "numOutputs"
                },
                {
                    "type": "const Structure **",
                    "name": "inputs"
                },
                {
                    "type": "size_t",
                    "name": "numInputs"
                },
                {
                    "type": "int64_t *",
                    "name": "outRows"
                },
                {
                    "type": "int64_t *",
                    "name": "outCols"
                },
                {
                    "type": "int64_t *",
                    "name": "splits"
                },
                {
                    "type": "int64_t *",
                    "name": "combines"
                },
                {
                    "type": "const char *",
                    "name": "irCode"
                }
            ]
        },
        "api": [
            {
                "name":  ["CPP"],
                "instantiations": [
                    [["DenseMatrix", "double"]]
                ]
            }
        ]
    },
    {
        "kernelTemplate": {
            "header": "StartProfiling.h",
            "opName": "startProfiling",
            "returnType": "void",
            "templateParams": [],
            "runtimeParams": []
        },
        "instantiations": [
            []
        ]
    },
    {
        "kernelTemplate": {
            "header": "StopProfiling.h",
            "opName": "stopProfiling",
            "returnType": "void",
            "templateParams": [],
            "runtimeParams": []
        },
        "instantiations": [
            []
        ]
    }
]
